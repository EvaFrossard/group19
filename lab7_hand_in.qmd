---
title: "lab06_exercises"
author: "Eva Frossard"
format: html
editor: visual
---
# Load libraries

```{r}
library(tidyverse)
library(broom)
```

# Load Data

```{r}
raw_dir <- "/home/people/s231663/projects/lab07_git_exercises"
data_file <- "gravier.RData"
data_loc <- "https://github.com/ramhiser/datamicroarray/raw/master/data/"

if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}
load(file = str_c(raw_dir, data_file))
```


# Tidy the data
## Clean Data

```{r}
gravier_clean <- gravier |>
  bind_cols() |> # binds the two dataframes by columns
  as_tibble()


write_tsv(gravier_clean, 
       file="/home/people/s231663/projects/lab07_git_exercises/02_gravier_clean.tsv.gz"
       )
```

## Augment Data


```{r}
gravier_clean_aug <- gravier_clean |>
  mutate(y = case_when(y == "poor" ~ 1,
                       y == "good" ~ 0)) |> 
  relocate(early_metastasis = y)


write_tsv(gravier_clean_aug, 
       file="/home/people/s231663/projects/lab07_git_exercises/03_gravier_clean_aug.tsv.gz")

gravier_clean_aug
```

## Analysis


```{r}
my_first_model <- lm(formula = g1A01 ~ early_metastasis,
   data = gravier_clean_aug)

```


```{r}
gravier_clean_aug_long <- gravier_clean_aug |> 
  pivot_longer(
    cols = starts_with("g"),
    names_to = "genes",
    values_to = "log2_expr_level"
  )

```

```{r}
gravier_clean_aug_long
```


```{r}
gravier_clean_aug_long_nested <- gravier_clean_aug_long |> 
  group_by(genes) |> 
  nest() |> 
  ungroup()

```


```{r}
gravier_clean_aug_long_nested <- gravier_clean_aug_long_nested |> 
  group_by(genes) |> 
  mutate(
    model_object = map(.x = data,
                   .f = ~lm(formula = log2_expr_level ~ early_metastasis,
                            data = .x))
  )
```

## Tidying the models

```{r}
gravier_clean_aug_long_nested <- gravier_clean_aug_long_nested |> 
  mutate(model_object_tidy = map(.x = model_object,
                                 .f = ~tidy(conf.int = TRUE,
                                           conf.level = 0.95,
                                           x = .x)
  )
)
gravier_clean_aug_long_nested

```

## Wrangling

```{r}
gravier_estimates <- gravier_clean_aug_long_nested |> 
  unnest( model_object_tidy
  )

```

```{r}
gravier_estimates <- gravier_estimates|> 
  filter(term == "early_metastasis") |> 
  ungroup(genes)


```

```{r}
gravier_estimates <- gravier_estimates |> 
  mutate(
    q.value = p.adjust(p.value),
    is.significant = case_when(
      p.value < 0.05 ~ "yes",
      p.value >= 0.05 ~ "no"
    )
  )

sample_n(gravier_estimates,10)

gravier_estimates

```

# PCA analysis 
```{r}
pca_fit <- gravier_estimates %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data

```

## Scatter plot

```{r}
pca_fit %>%
  augment(gravier_estimates) %>% 
  ggplot(aes(.fittedPC1, .fittedPC2, color = is.significant)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(no = "#D55E00", yes = "#0072B2")
  ) 
  #theme_half_open(12) + background_grid()
```

## Rotation matrix 

```{r}
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)


pca_fit |>
  tidy(matrix = "rotation") |>
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |>
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed()
```







##Variances plot as expained by each PC

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")
```


```{r}
Variance_plot <- pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme(
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    #panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank()
  )
Variance_plot
```
This plot shows that the first component of the PC explains 55.4% of the data variation.

# Need to use patchwork at the end to 
```{r}
```



```{r}
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit |> 
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") |> 
  head(10) |> 
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = +0.01, 
    color = "#904C2F"
  ) +
  xlim(-0.05, 0.06) + ylim(-0.05, 0.05) +
  coord_fixed()
```
